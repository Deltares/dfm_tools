[metadata]
name = dfm_tools
version = 0.13.0
author = Jelmer Veenstra
author_email = Jelmer.Veenstra@Deltares.nl
description = dfm_tools are pre- and post-processing tools for Delft3D FM
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/Deltares/dfm_tools
keywords = dfm_tools, D-FlowFM, D-HYDRO, post-processing, pre-processing, mapfiles, hisfiles
license = GNU General Public License v3 (GPLv3)
license_files = ('LICENSE')
classifiers = 
	Development Status :: 4 - Beta
	Intended Audience :: Science/Research
	Operating System :: OS Independent
	Topic :: Scientific/Engineering :: Information Analysis
	License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)
	Programming Language :: Python
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
	Programming Language :: Python :: 3.11

[options]
python_requires = >=3.8
install_requires = 
	#install scipy<1.10.0 to avoid da.interp() issue: https://github.com/Deltares/dfm_tools/issues/287 and https://github.com/pydata/xarray/issues/7701
	scipy<1.10.0 
	numpy
	matplotlib
	#install pandas<2.0.0 to avoid conflict with xarray<2023.3.0: https://github.com/Deltares/xugrid/issues/78#issuecomment-1597723955 (xarray 2023.1.0 is the latest py38 release, and py38 is still supported by dfm_tools)
	pandas<2.0.0
	shapely>=1.7.0
	geopandas
	fiona>=1.9
	contextily
	xarray
	dask
	netcdf4>=1.5.3
	bottleneck
	xugrid>=0.6.1
	cdsapi
	pydap>=3.3.0
	hydrolib-core>=0.5.1
	meshkernel>=2.1.0
packages = find:
include_package_data = True
zip_safe = False

[options.extras_require]
test = 
	bump2version>=0.5.11
	flake8
	pytest
	pytest-cov
	twine
	jupyter
	notebook
	mkdocs
	mkdocs-material
	mkdocs-jupyter
	mkdocstrings-python
	mkdocs-exclude
complete = 
	%(test)s

[tool:pytest]
python_files = test_*.py
console_output_style = count
norecursedirs = tests/*
#norecursedirs = .git .eggs .github dfm_tools.egg-info docs
addopts = -v --tb=short --durations=5
testpaths =
	tests
markers =
	unittest: mark a test as unittest. Used for testing single methods.
	systemtest: mark a test as systemtest. Used for testing at a higher level, verifying a given input returns the expected output.
	acceptance: mark a test as acceptance. Used for non-functional requirements and data that needs to be human-verified.
	requireslocaldata: mark a test that cannot run on Github.

[flake8]
exclude = docs
