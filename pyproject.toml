[build-system]
requires = ["setuptools>=64.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dfm_tools"
version = "0.15.0"
maintainers = [{ name = "Jelmer Veenstra", email = "jelmer.veenstra@deltares.nl" }]
description = "dfm_tools are pre- and post-processing tools for Delft3D FM"
readme = "README.md"
keywords = ["dfm_tools", "D-FlowFM", "D-HYDRO", "post-processing", "pre-processing", "mapfiles", "hisfiles", "modelbuilder"]
license = { text = "LGPLv3" }
requires-python = ">=3.8"
dependencies = [
	#scipy<1.6.0 pip install fails in py39, is also 3 years old
	"scipy>=1.6.0",
	#numpy 1.21 is EOL since june 2023
	"numpy>=1.22",
	#contour colorbar on uniform values fails with matplotlib<3.7.0, several other features with matplotlib<3.6.0
	"matplotlib>=3.7.0",
	#pandas<2.0.0 in case of py38 to avoid conflict with xarray<2023.3.0: https://github.com/Deltares/xugrid/issues/78#issuecomment-1597723955 (xarray 2023.1.0 is the latest py38 release, and py38 is still supported by dfm_tools)
	#pandas>=1.4 is required by xarray>=2023.3.0
	"pandas<2.0.0;python_version<='3.8'",
	"pandas>=1.4.0",
	#shapely<2.0.0 give "AttributeError: module 'shapely' has no attribute 'GeometryType'"
	"shapely>=2.0.0",
	#geopandas<0.13.0 require shapely<2.0.0
	"geopandas>=0.13.0",
	#fiona<1.9 does not contain sql where filter
	"fiona>=1.9",
	#contextily<1.0.0 is from April 2020
	"contextily>=1.0.0",
	#xarray<2023.4.0 conflicts with pandas<2.0.0 for resampling, only available for py39
	#xarray<2022.6.0 did not find certain variable in dataset in test_data_map testcase. TODO: lower xarray/dask to 2022.6.0 when xugrid>0.6.5 is available
	"xarray>=2023.4.0;python_version>='3.9'",
	"xarray>=2022.11.0",
	#dask is aligned with xarray, no particular reason
	"dask>=2023.4.0;python_version>='3.9'",
	"dask>=2022.11.0",
	#netcdf4<1.5.4 pip install fails in py39
	"netcdf4>=1.5.4",
	#bottleneck<1.3.3 pip install fails in py39
	"bottleneck>=1.3.3",
	#xugrid 0.6.5 supports wider xarray version range. TODO: xugrid>=0.6.5 requires xarray>=2022.11.0 without explicitly stating this, will be solved in next version (https://github.com/Deltares/xugrid/issues/167)
	"xugrid>=0.6.5",
	#cdsapi<0.6.1 is from Feb 2021 and does not support newer python versions
	"cdsapi>=0.6.1",
	#pydap<3.4.0 is from May 2017 and does not support newer python versions
	"pydap>=3.4.0",
	#pooch<1.1.0 do not have attribute retrieve
	"pooch>=1.1.0",
	#hydrolib-core<0.5.1 does not yet contain 3D z-sigma mdu settings and many other essentials
	"hydrolib-core>=0.5.1",
	#meshkernel<2.1.0 does not yet contain mesh2d_refine_based_on_gridded_samples and other essentials
	"meshkernel>=2.1.0",
]
classifiers = [
	"Development Status :: 4 - Beta",
	"Intended Audience :: Science/Research",
	"Operating System :: OS Independent",
	"Topic :: Scientific/Engineering :: Information Analysis",
	"License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
	"Programming Language :: Python",
	"Programming Language :: Python :: 3",
	"Programming Language :: Python :: 3.8",
	"Programming Language :: Python :: 3.9",
	"Programming Language :: Python :: 3.10",
	"Programming Language :: Python :: 3.11",
	#python 3.12 is not supported yet: https://github.com/Deltares/dfm_tools/issues/551
]

[project.urls]
Home = "https://github.com/deltares/dfm_tools"
Code = "https://github.com/deltares/dfm_tools"
Issues = "https://github.com/deltares/dfm_tools/issues"

[project.optional-dependencies]
test = [
	"bump2version>=0.5.11",
	"flake8",
	"pytest",
	"pytest-cov",
	"pytest-timeout",
	"twine",
	"jupyter",
	"notebook",
	"mkdocs",
	"mkdocs-material",
	"mkdocs-jupyter",
	"mkdocstrings-python",
	"mkdocs-exclude",
]

[tool.pytest.ini_options]
console_output_style = "count"
testpaths = ["tests"]
addopts = "-v --tb=short --durations=0"
markers = [
	"unittest: mark a test as unittest. Used for testing single methods",
	"systemtest: mark a test as systemtest. Used for testing at a higher level, verifying a given input returns the expected output",
	"acceptance: mark a test as acceptance. Used for non-functional requirements and data that needs to be human-verified",
	"requireslocaldata: mark a test that cannot run on Github",
]

[tool.flake8]
exclude = "docs"
